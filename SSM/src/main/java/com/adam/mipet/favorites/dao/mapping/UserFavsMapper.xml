<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.adam.mipet.favorites.dao.IUserFavsDao">
	<resultMap id="BaseResultMap" type="com.adam.mipet.favorites.entity.UserFavs">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="article_id" property="articleId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="collect_time" property="collectTime" jdbcType="TIMESTAMP" />
		<result column="deleted" property="deleted" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<resultMap id="select_MyCollectionsMap" type="com.adam.mipet.favorites.entity.UserFavs">
		<result column="article_id" property="id" jdbcType="INTEGER" />
		<result column="article_id" property="articleId" jdbcType="INTEGER" />
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="collect_time" property="collectTime" jdbcType="TIMESTAMP" />
		<result column="title" jdbcType="VARCHAR" property="title" />
		<result column="html_content" jdbcType="VARCHAR" property="htmlContent" />
		<result column="likes" jdbcType="INTEGER" property="likes" />
		<result column="comments" jdbcType="INTEGER" property="comments" />
		<result column="pub_time" jdbcType="TIMESTAMP" property="pubTime" />
		<result column="head_pic" jdbcType="VARCHAR" property="headPic" />
		<result column="nickname" jdbcType="VARCHAR" property="nickname" /> 
		<result column="deleted" jdbcType="INTEGER" property="deleted" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, article_id, user_id, collect_time, deleted, update_time
	</sql>
	<!-- 查询我的收藏 -->
	<select id="selectMyCollections" resultMap="select_MyCollectionsMap" parameterType="com.adam.mipet.favorites.entity.UserFavsExample">
		SELECT f.id,f.collect_time,a.id article_id,a.title,a.html_content,a.likes,a.comments,a.pub_time,a.user_id,u.head_pic,u.nickname from user_favs f,user_article a
		LEFT JOIN user_info u on a.user_id = u.id
		where f.article_id = a.id and a.deleted = 0 and f.user_id = #{userId}
		<if test="searchinput != null and searchinput != '' ">
			and a.title like concat('%',#{searchinput},'%')
		</if>
		order by a.pub_time desc
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>

	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.adam.mipet.favorites.entity.UserFavsExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from user_favs
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="start !=0 or limit!=0">
			limit #{start},#{limit}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user_favs
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user_favs
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.adam.mipet.favorites.entity.UserFavsExample">
		delete from user_favs
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.adam.mipet.favorites.entity.UserFavs">
		insert into user_favs (article_id, user_id,
		collect_time, deleted, update_time
		)
		values (#{#{articleId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER},
		now(),0, now())
	</insert>
	<insert id="insertSelective" parameterType="com.adam.mipet.favorites.entity.UserFavs">
		insert into user_favs
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="articleId != null">
				article_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			collect_time,
			deleted,
			update_time,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="articleId != null">
				#{articleId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			now(),
			0,
			now(),
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.adam.mipet.favorites.entity.UserFavsExample" resultType="java.lang.Integer">
		select count(*) from user_favs
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user_favs
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.articleId != null">
				article_id = #{record.articleId,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.collectTime != null">
				collect_time = #{record.collectTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.deleted != null">
				deleted = #{record.deleted,jdbcType=INTEGER},
			</if>
			<if test="record.updateTime != null">
				update_time = now(),
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user_favs
		set id = #{record.id,jdbcType=INTEGER},
		article_id = #{record.articleId,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		collect_time = #{record.collectTime,jdbcType=TIMESTAMP},
		deleted = #{record.deleted,jdbcType=INTEGER},
		update_time = now()
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.adam.mipet.favorites.entity.UserFavs">
		update user_favs
		<set>
			<if test="articleId != null">
				article_id = #{articleId,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="collectTime != null">
				collect_time = #{collectTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleted != null">
				deleted = #{deleted,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = now(),
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.adam.mipet.favorites.entity.UserFavs">
		update user_favs
		set article_id = #{articleId,jdbcType=INTEGER},
		user_id = #{userId,jdbcType=INTEGER},
		collect_time = #{collectTime,jdbcType=TIMESTAMP},
		deleted = #{deleted,jdbcType=INTEGER},
		update_time = now()
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>