<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.adam.sys.sysfunc.dao.JobDao" >
  <resultMap id="BaseResultMap" type="com.adam.sys.sysfunc.entity.Job" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_group" property="jobGroup" jdbcType="VARCHAR" />
    <result column="cron_expression" property="cronExpression" jdbcType="VARCHAR" />
    <result column="job_status" property="jobStatus" jdbcType="VARCHAR" />
    <result column="job_class" property="jobClass" jdbcType="VARCHAR" />
    <result column="prevfire_time" property="prevfireTime" jdbcType="TIMESTAMP" />
    <result column="creator" property="creator" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updator" property="updator" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    job_id, job_name, job_group, cron_expression, job_status, job_class, prevfire_time, 
    creator, create_time, updator, update_time, is_deleted
  </sql>
  <select id="query" resultMap="BaseResultMap" parameterType="map">
    select <include refid="Base_Column_List" /> from t_sys_job where is_deleted=0
    <if test="jobName!='' and jobName!=null">
        and job_name LIKE CONCAT('%',#{jobName,jdbcType=VARCHAR},'%') 
    </if>
    <if test="jobStatus!='' and jobStatus!=null">
        and job_status = #{jobStatus,jdbcType=VARCHAR}
    </if>
  </select>
  <delete id="delete" parameterType="com.adam.sys.sysfunc.entity.Job" >
    update t_sys_job set is_deleted=1,updator=#{updator,jdbcType=VARCHAR} where job_id = #{jobId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.adam.sys.sysfunc.entity.Job" >
    insert into t_sys_job (job_name, job_group, cron_expression, job_class, creator, updator)
    values (#{jobName,jdbcType=VARCHAR}, #{jobGroup,jdbcType=VARCHAR}, 
      #{cronExpression,jdbcType=VARCHAR}, #{jobClass,jdbcType=VARCHAR},
      #{creator,jdbcType=VARCHAR},#{updator,jdbcType=VARCHAR}
      )
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.adam.sys.sysfunc.entity.Job" >
    update t_sys_job
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobGroup != null" >
        job_group = #{jobGroup,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null" >
        cron_expression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null" >
        job_class = #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="prevfireTime != null" >
        prevfire_time = #{prevfireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updator != null" >
        updator = #{updator,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.adam.sys.sysfunc.entity.Job" >
    update t_sys_job
    set job_name = #{jobName,jdbcType=VARCHAR},
      job_group = #{jobGroup,jdbcType=VARCHAR},
      cron_expression = #{cronExpression,jdbcType=VARCHAR},
      job_class = #{jobClass,jdbcType=VARCHAR},
      prevfire_time = #{prevfireTime,jdbcType=TIMESTAMP},
      updator = #{updator,jdbcType=VARCHAR},
      update_time = NOW()
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  
  <update id="updatePrevfiretimeByClass" parameterType="java.lang.String">
    update t_sys_job set prevfire_time = NOW(),update_time=now() where job_class = #{jobClass,jdbcType=VARCHAR}
  </update>
  
  <update id="updateStatus" parameterType="com.adam.sys.sysfunc.entity.Job">
    update t_sys_job set job_status = #{jobStatus,jdbcType=VARCHAR},update_time=now()
    <if test="updator != null" >
        ,updator = #{updator,jdbcType=VARCHAR}
     </if>
     where job_class = #{jobClass,jdbcType=VARCHAR}
  </update>
  
</mapper>